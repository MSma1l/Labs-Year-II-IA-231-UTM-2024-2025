tabelul 1 id_Istructor
 nume prenume id_sexul numar_telefon id_masine ID_FUNCTIE 

tabela Angajati 
nume prenume indp data_nasterei id_sexul numar_telefon id_functia

tabema Functie (id_functia)
instructor examenator contabil director secretar <-(valorile)

tabelul 2 id_masine
 macra modelul anul  

tabelul 3 id_studentii
 nume prenume idnp data_nasterei id_sexul id_categoria numar_telefon id_instructor

tabelul 4 plati
id_student suma data_platii 

tabelul 5 programari
id_Student id_instructor id_masine data_programarii Id_status

tabela 6 evaluari
id_student id_instructor tip_evaluare data_evaluarii punctaj 


tabela 10 categorii (id_categorie)(categorie)
AM A1 A2 A B1 B C1 C D1 D BE C1E CE D1E DE F M <-(valori) 

tabela 15 id_ziua
luni marti miercuri joi vineri sambata 

tabela 16 id_interval
8-9 9-10 10-11 11-12 12-13 14-15 15-16 16-17 17-18 






CREATE TABLE MASINA (
	MASINA_ID INT PRIMARY KEY,
	MARCA VARCHAR(64) NOT NULL,
	MODELUL VARCHAR(64) NOT NULL,
	ANUL DATE NOT NULL,
	CUTIE CHAR(1) NOT NULL
);

CREATE TABLE FUNCTIE (
	FUNCTIE_ID INT PRIMARY KEY,
	DENUMIRE_FUNCTIE VARCHAR(64) NOT NULL
);

CREATE TABLE INSTRUCTOR (
	ID_INSTRUCTOR INT PRIMARY KEY,
	NUME VARCHAR(32) NOT NULL,
	PRENUME VARCHAR(32) NOT NULL,
	NUMAR_TELEFON VARCHAR(16) NOT NULL,
	MASINA_ID INT NOT NULL,
	FUNCTIE_ID INT NOT NULL,
	FOREIGN KEY (MASINA_ID) REFERENCES MASINA(MASINA_ID),
	FOREIGN KEY (FUNCTIE_ID) REFERENCES FUNCTIE(FUNCTIE_ID)
);

CREATE TABLE CATEGORIE (
	CATEGORIE_ID CHAR(1) PRIMARY KEY,
	DENUMIRE_CATEGORIE VARCHAR(3) NOT NULL
);

CREATE TABLE STUDENT (
	STUDENT_ID INT PRIMARY KEY, 
	NUME VARCHAR(32) NOT NULL,
	PRENUME VARCHAR(32) NOT NULL,
	IDNP VARCHAR(16) NOT NULL,
	DATA_NASTEREI DATE NOT NULL,
	SEXUL_ID CHAR(1) NOT NULL,
	CATEGORIE_ID CHAR(1) NOT NULL,
	NUMAR_TELEFON VARCHAR(16) NOT NULL,
	INSTRUCTOR_ID INT NOT NULL,
	FOREIGN KEY (CATEGORIE_ID) REFERENCES CATEGORIE(CATEGORIE_ID),
	FOREIGN KEY (INSTRUCTOR_ID) REFERENCES INSTRUCTOR(ID_INSTRUCTOR)
);

CREATE TABLE ANGAJAT (
	ANGAJAT_ID INT PRIMARY KEY,	
	NUME VARCHAR(32) NOT NULL,
	PRENUME VARCHAR(32) NOT NULL,
	IDNP VARCHAR(32) NOT NULL,
	DATA_NASTEREI DATE NOT NULL,
	SEXUL_ID CHAR(1) NOT NULL,
	NUMAR_TELEFON VARCHAR(16) NOT NULL,
	FUNCTIE_ID INT NOT NULL,
	SALARIU DECIMAL(10, 2) NOT NULL,
	FOREIGN KEY (FUNCTIE_ID) REFERENCES FUNCTIE(FUNCTIE_ID)
);

CREATE TABLE PLATI (
	STUDENT_ID INT,
	SUMA DECIMAL(8, 2) NOT NULL,
	DATA_PLATII DATE NOT NULL,
	FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID)
);

CREATE TABLE PROGRAMARI (
	PROGRAMARE_ID INT PRIMARY KEY,
	STUDENT_ID INT NOT NULL,
	ID_INSTRUCTOR INT NOT NULL,
	MASINA_ID INT NOT NULL,
	DATA_PROGRAMARII DATE NOT NULL,
	STATUS_PROGRAMARII VARCHAR(3) NOT NULL,
	FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID),
	FOREIGN KEY (ID_INSTRUCTOR) REFERENCES INSTRUCTOR(ID_INSTRUCTOR),
	FOREIGN KEY (MASINA_ID) REFERENCES MASINA(MASINA_ID)
);

CREATE TABLE EVALUARE (
	STUDENT_ID INT,
	ID_INSTRUCTOR INT,
	TIP_EVALUARE CHAR(1) NOT NULL,
	DATA_EVALUARII DATE NOT NULL,
	PUNCTAJ INT NOT NULL,
	FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID),
	FOREIGN KEY (ID_INSTRUCTOR) REFERENCES INSTRUCTOR(ID_INSTRUCTOR)
);






1.2 argument dece am ales anume ce trebuie sa aflam si de ce ea trebuie si analizand tema 
2 colectarea informatiei care avem nevoie pentru a face aceasta baza de date aceste informatii putem lua din diferite surse relative si analiza domeniul 
